<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sonarsource.scm.jazzrtc</groupId>
  <artifactId>sonar-scm-jazzrtc-plugin</artifactId>
  <name>SonarQube :: Plugins :: SCM :: Jazz RTC</name>
  <version>1.4-SNAPSHOT</version>
  <packaging>sonar-plugin</packaging>
  <description>Jazz Rational Team Concert SCM Provider.</description>
  <url>http://redirect.sonarsource.com/plugins/scmjazzrtc.html</url>
  <inceptionYear>2014</inceptionYear>

  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>henryju</id>
      <name>Julien Henry</name>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>troosan</id>
      <name>de Troostembergh Antoine</name>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/troosan/sonar-scm-jazzrtc.git</connection>
    <developerConnection>scm:git:https://github.com/troosan/sonar-scm-jazzrtc.git</developerConnection>
    <url>https://github.com/troosan/sonar-scm-jazzrtc</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/troosan/sonar-scm-jazzrtc/issues</url>
  </issueManagement>

  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/troosan/sonar-scm-jazzrtc/actions</url>
  </ciManagement>

  <properties>
    <project.scm.id>github</project.scm.id>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar.buildVersion>7.7</sonar.buildVersion>
    <sonar.pluginName>Jazz RTC</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.scm.jazzrtc.JazzRtcPlugin</sonar.pluginClass>
    <gitRepositoryName>sonar-scm-jazzrtc</gitRepositoryName>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>2.0.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.buildVersion}</version>
      <scope>provided</scope>
    </dependency>

    <!-- unit tests -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>1.7.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonar.buildVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <version>1.17</version>
        <extensions>true</extensions>
        <configuration>
          <pluginClass>${sonar.pluginClass}</pluginClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.4</version>
        <configuration>
          <destFile>${sonar.jacoco.reportPath}</destFile>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-release-plugin</artifactId>
         <configuration>
            <tagNameFormat>@{project.version}</tagNameFormat>
            <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
            <updateDependencies>false</updateDependencies>
            <releaseProfiles>release</releaseProfiles>
         </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.jutzig</groupId>
            <artifactId>github-release-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>github-upload</id>
                <phase>deploy</phase>
                <goals>
                  <goal>release</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <releaseName>${project.version}</releaseName>
                  <tag>${project.version}</tag>
                  <artifact>${project.build.directory}/${project.artifactId}-${project.version}.jar</artifact>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
